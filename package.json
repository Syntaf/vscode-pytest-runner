{
  "name": "vscode-pytest-runner",
  "displayName": "Pytest Runner",
  "description": "Simple way to run or debug Python tests using pytest from context-menu",
  "version": "0.1.0",
  "publisher": "firsttris",
  "author": "Tristan Teufel",
  "repository": {
    "type": "git",
    "url": "https://github.com/firsttris/vscode-pytest-runner.git"
  },
  "license": "MIT",
  "icon": "public/icon.png",
  "engines": {
    "vscode": "^1.83.0"
  },
  "categories": [
    "Testing"
  ],
  "keywords": [
    "python",
    "pytest",
    "testing",
    "test runner",
    "poetry",
    "debug"
  ],
  "activationEvents": [
    "onLanguage:python"
  ],
  "extensionDependencies": [
    "ms-python.python"
  ],
  "main": "./dist/extension",
  "contributes": {
    "configuration": [
      {
        "title": "Pytest-Runner Config",
        "properties": {
          "pytestrunner.pytestPath": {
            "type": "string",
            "default": "pytest",
            "description": "Path to pytest executable",
            "scope": "window"
          },
          "pytestrunner.pytestArgs": {
            "type": "array",
            "default": ["-v"],
            "items": {
              "type": "string",
              "description": "Pytest argument"
            },
            "description": "Default pytest arguments",
            "scope": "window"
          },
          "pytestrunner.configPath": {
            "type": "string",
            "default": "",
            "description": "Path to pytest config file (pytest.ini, pyproject.toml, setup.cfg)",
            "scope": "window"
          },
          "pytestrunner.usePoetry": {
            "type": "boolean",
            "default": true,
            "description": "Use Poetry for dependency management and virtual environment",
            "scope": "window"
          },
          "pytestrunner.poetryPath": {
            "type": "string",
            "default": "poetry",
            "description": "Path to Poetry executable",
            "scope": "window"
          },
          "pytestrunner.virtualEnvPath": {
            "type": "string",
            "default": "",
            "description": "Custom virtual environment path (overrides Poetry detection)",
            "scope": "window"
          },
          "pytestrunner.disableCodeLens": {
            "type": "boolean",
            "default": false,
            "description": "Disable CodeLens feature",
            "scope": "window"
          },
          "pytestrunner.codeLensSelector": {
            "type": "string",
            "default": "**/{test_*.py,*_test.py}",
            "description": "CodeLens will be shown on Python test files matching this pattern"
          },
          "pytestrunner.codeLens": {
            "type": "array",
            "default": [
              "run",
              "debug"
            ],
            "description": "Enable desired codeLens, possible values: 'run', 'debug', 'watch', 'coverage'. Defaults to ['run', 'debug']",
            "items": {
              "type": "string",
              "description": "Either 'run', 'debug', 'watch', 'coverage'"
            },
            "scope": "window"
          },
          "pytestrunner.changeDirectoryToWorkspaceRoot": {
            "type": "boolean",
            "default": true,
            "description": "Changes directory before execution. The fallback order is:\n1. `pytestrunner.virtualEnvPath`\n2. Poetry project root\n3. `${workspaceFolder}`",
            "scope": "window"
          },
          "pytestrunner.preserveEditorFocus": {
            "type": "boolean",
            "default": false,
            "description": "Preserve focus on editor when running tests",
            "scope": "window"
          },
          "pytestrunner.include": {
            "type": "array",
            "default": [],
            "description": "Python test file globs to include",
            "scope": "window"
          },
          "pytestrunner.exclude": {
            "type": "array",
            "default": [],
            "description": "Python test file globs to exclude",
            "scope": "window"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "extension.runPytest",
        "title": "Run Pytest"
      },
      {
        "command": "extension.runPytestPath",
        "title": "Run Pytest on Path"
      },
      {
        "command": "extension.runPytestCoverage",
        "title": "Run Pytest with Coverage"
      },
      {
        "command": "extension.runPrevPytest",
        "title": "Run Pytest - Run Previous Test"
      },
      {
        "command": "extension.runPytestFile",
        "title": "Run Pytest on File"
      },
      {
        "command": "extension.debugPytest",
        "title": "Debug Pytest"
      },
      {
        "command": "extension.debugPytestPath",
        "title": "Debug Pytest on Path"
      },
      {
        "command": "extension.runPytestFileWithCoverage",
        "title": "Run Pytest File with Coverage"
      },
      {
        "command": "extension.runPytestFileWithWatchMode",
        "title": "Run Pytest File in Watch Mode"
      },
      {
        "command": "extension.watchPytest",
        "title": "Run Pytest --watch"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "extension.runPytest",
          "group": "02_pytest"
        },
        {
          "command": "extension.debugPytest",
          "group": "02_pytest"
        }
      ],
      "explorer/context": [
        {
          "command": "extension.runPytestPath",
          "when": "explorerResourceIsFolder || resourceFilename =~ /.*(test_.*\\.py|.*_test\\.py)$/",
          "group": "02_pytest@1"
        },
        {
          "command": "extension.debugPytestPath",
          "when": "explorerResourceIsFolder || resourceFilename =~ /.*(test_.*\\.py|.*_test\\.py)$/",
          "group": "02_pytest@2"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "build": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "test": "jest .src/test",
    "vsce:publish": "vsce publish patch -m '%s [skip ci]' && git push",
    "ovsx:publish": "ovsx publish",
    "publish": "npm run vsce:publish && npm run ovsx:publish",
    "eslint:fix": "eslint --cache --fix",
    "prettier": "prettier --write"
  },
  "devDependencies": {
    "@types/jest": "^29.5.5",
    "@types/node": "^20.8.6",
    "@types/vscode": "^1.83.0",
    "@typescript-eslint/eslint-plugin": "^6.7.5",
    "@typescript-eslint/parser": "^6.7.5",
    "@vscode/vsce": "^2.21.1",
    "eslint": "^8.51.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "ovsx": "^0.8.3",
    "prettier": "^3.0.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.0",
    "typescript": "^5.2.2",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "fast-glob": "^3.3.3",
    "jest-editor-support": "^31.1.2",
    "micromatch": "^4.0.8"
  }
}
